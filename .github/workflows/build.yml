name: Package Extension

on:
  push:
    branches:
      - '*'

jobs:
  once:
    permissions:
      contents: write # for creating release
    name: Create release and ubuntu build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install npm dependencies
        run: npm install
      
      - name: Install node-pre-gyp
        run: ./node_modules/@mapbox/node-pre-gyp/bin/node-pre-gyp install
      
      - name: Get package version
        id: get_package_version_ubuntu
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        
      - name: Get package name
        id: get_package_name_ubuntu
        run: echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT

      - name: Build extension
        run: npm run prepackage

      - name: Install vsce globally
        run: npm install -g @vscode/vsce

      - name: Package extension
        run: vsce package --no-yarn --allow-package-secrets privatekey --allow-star-activation -o . --target linux-x64

      - name: Fetch latest commit hash (Ubuntu)
        id: get_commit_hash_ubuntu
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Rename and move VSIX file (Ubuntu)
        id: rename_vsix_ubuntu
        run: |
          old_name="${{ steps.get_package_name_ubuntu.outputs.name }}-linux-x64-${{ steps.get_package_version_ubuntu.outputs.version }}.vsix"
          new_name="${old_name%.*}-${{ steps.get_commit_hash_ubuntu.outputs.hash }}.vsix"
          mkdir -p releases
          mv "$old_name" "releases/$new_name"
          echo "new_name=$new_name" >> $GITHUB_OUTPUT

      - name: Create GitHub Release and Upload VSIX (Ubuntu)
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            releases/${{ steps.rename_vsix_ubuntu.outputs.new_name }}
          body: Release created automatically from workflow.
          draft: true
          tag_name: '${{ steps.get_package_version_ubuntu.outputs.version }}-${{ steps.get_commit_hash_ubuntu.outputs.hash }}'
  build:
    permissions:
      contents: write # for creating release
    name: Build packages
    needs: once
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install unixODBC
        if: startsWith(matrix.os, 'macos')
        run: brew install unixodbc

      - name: Install Microsoft's ODBC driver
        if: startsWith(matrix.os, 'macos')
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
          brew tap microsoft/mssql-release https://github.com/Microsoft/homebrew-mssql-release
          brew update
          HOMEBREW_ACCEPT_EULA=Y brew install msodbcsql18 mssql-tools18

      - name: Install npm dependencies
        run: npm install

      - name: Install node-pre-gyp
        run: ./node_modules/@mapbox/node-pre-gyp/bin/node-pre-gyp install

      - name: Get package version (Windows)
        id: get_package_version_windows
        if: startsWith(matrix.os, 'windows')
        run: echo "version=$(node -p "require('./package.json').version")" >> $ENV:GITHUB_OUTPUT

      - name: Get package version (Mac OS)
        id: get_package_version_macos
        if: startsWith(matrix.os, 'macos')
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Get package name (Windows)
        id: get_package_name_windows
        if: startsWith(matrix.os, 'windows')
        run: echo "name=$(node -p "require('./package.json').name")" >> $ENV:GITHUB_OUTPUT

      - name: Get package name (Mac OS)
        id: get_package_name_macos
        if: startsWith(matrix.os, 'macos')
        run: echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT

      - name: Build extension
        run: npm run prepackage

      - name: Install vsce globally
        run: npm install -g @vscode/vsce

      - name: Package extension (Windows)
        if: startsWith(matrix.os, 'windows')
        run: vsce package --no-yarn --allow-package-secrets privatekey --allow-star-activation -o . --target win32-x64

      - name: Package extension (Mac OS)
        if: startsWith(matrix.os, 'macos')
        run: vsce package --no-yarn --allow-package-secrets privatekey --allow-star-activation -o . --target darwin-x64

      - name: Fetch latest commit hash (Windows)
        id: get_commit_hash_windows
        if: startsWith(matrix.os, 'windows')
        run: echo "hash=$(git rev-parse --short HEAD)" >> $ENV:GITHUB_OUTPUT

      - name: Fetch latest commit hash (Mac OS)
        id: get_commit_hash_macos
        if: startsWith(matrix.os, 'macos')
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Rename and move VSIX file (Windows)
        id: rename_vsix_windows
        if: startsWith(matrix.os, 'windows')
        run: |
          $old_name = "${{ steps.get_package_name_windows.outputs.name }}-win32-x64-${{ steps.get_package_version_windows.outputs.version }}"
          $extension = ".vsix"
          $new_name = "$old_name-${{ steps.get_commit_hash_windows.outputs.hash }}$extension"
          New-Item -ItemType Directory -Force -Path releases
          Move-Item "$old_name$extension" "releases\$new_name"
          echo "new_name=$new_name" >> $ENV:GITHUB_OUTPUT

      - name: Rename and move VSIX file (Mac OS)
        id: rename_vsix_macos
        if: startsWith(matrix.os, 'macos')
        run: |
          old_name="${{ steps.get_package_name_macos.outputs.name }}-darwin-x64-${{ steps.get_package_version_macos.outputs.version }}.vsix"
          new_name="${old_name%.*}-${{ steps.get_commit_hash_macos.outputs.hash }}.vsix"
          mkdir -p releases
          mv "$old_name" "releases/$new_name"
          echo "new_name=$new_name" >> $GITHUB_OUTPUT

      - name: Upload VSIX file as release asset (Windows)
        uses: softprops/action-gh-release@v2
        if: startsWith(matrix.os, 'windows')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            releases/${{ steps.rename_vsix_windows.outputs.new_name }}
          draft: true
          tag_name: '${{ steps.get_package_version_windows.outputs.version }}-${{ steps.get_commit_hash_windows.outputs.hash }}'

      - name: Upload VSIX file as release asset (Mac OS)
        uses: softprops/action-gh-release@v2
        if: startsWith(matrix.os, 'macos')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            releases/${{ steps.rename_vsix_macos.outputs.new_name }}
          draft: true
          tag_name: '${{ steps.get_package_version_macos.outputs.version }}-${{ steps.get_commit_hash_macos.outputs.hash }}'

      - name: Display success message
        run: echo "Extension packaging complete and release created with asset uploaded."
